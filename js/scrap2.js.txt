<script>
			/* TESTS */
			(function (window, undefined) {


				var pathTest1 = new Path('M 100 200 v 600 h 600 v -600 h -600');
				var pathTest2 = new Path('M 100 200 v 600 h 600 v -600 z');
				var pathTest3 = new Path('M 100 200 v 600 h 600 v -600 L 100 200');





				var arrayTest1 = new Path([[100, 200],[100, 800],[700, 800],[700,200],[100, 200]]); // rectangle

				var parseFloatTest = [[100, 200],[800],[700, 800],[700,200],[100, 200]];

				console.dir(pathTest1);
				console.dir(pathTest2);

				console.log(pathTest1.toString());
				console.log(pathTest2.toString());
				console.log(pathTest3.toString());
				


				console.log('pathTest1');
				console.dir(pathTest1);
				console.log('pathTest2');
				console.dir(pathTest2);
				console.log('pathTest3');
				console.dir(pathTest3);
				console.log('arrayTest1');
				console.dir(arrayTest1);

				console.log('--------------')

				var test1 = Path('m100 100 h 400 l 300 300 z');
				var test2 = Path([[0,0],[100,200],[500, 50],[0,0]]);


				console.dir(test1);
				console.dir(test2);
				
				// fundamental tests
				console.log(new Path instanceof Path);		//# true
				console.log(new Path instanceof Array);		//# true
				console.log(new Path instanceof Object);	//# true
				console.log(new Path instanceof String);	//# true
				
				console.log('------');
				
				console.log(Path('asdf') instanceof Path);
				console.log(Path instanceof Array);
				
				console.log('------');
				
				console.dir(Path('asdf'));					// 
				console.dir(new Path('qwert'));				// 

				console.log('------isArray()');

				console.log(Path.isArray(Path('asdf')));	// true
				console.log(Path.isArray(new Array()));		// true
				console.log('strict--');
				console.log(Path.isArray(Path('asdf'), true));		// false
				console.log(Path.isArray(new Array(), true));		// true
				
				console.log('------');
				
				console.log(Path.isPath(Path('asdf')));		// true
				console.log(Path.isPath(new Path('asdf')));	// true

				console.log('------');

				console.log(Path.isPath([]));					// false

				console.dir(Path('m100 100 h l 300 300 z')); // # true 
				console.dir(Path('l 100 100 300 300 100 100')); // # false 
				console.dir(Path('m100 100 L300 300 l100 100')); // # false 
				console.dir(Path('l100 100 300 300 L100 100 z')); // # false
				console.dir(Path('         m100 100 300 300 100 100')); // # false 
				console.dir(Path(' m 100 100 l 300 300 100 100 ')); // # false 

				var test3 = Path([[100, 200],[100, 500], [300, 300]]);
				//stuff.push([100, 200]);

				console.dir(test3);
				

				/**/
				var test4 = Path('m  100  200   M300 200l100 400L300 600 500 400 300 200 L400 700 z');

				console.dir(test4);

				console.log('getPath');
				console.dir(test4.getPath());

				var path1 = Path('m  100  200   M300 200l100 400L300 600 500 400 300 200 L400 700 z');
				var path2 = path1.clone();

				console.dir(path1);


				path2[2] = [0,0];

				console.dir(path2);
				

				console.log('-map() test ----------------');
				
				var trianglePath = Path('M 100 100L 300 100 l 200 300 h 400 z');
				console.log('M 100 100L 300 100 l 200 300 h 400 z');
				console.log(trianglePath.toString());
				// MAP check
				trianglePath = trianglePath.map(function(point) { return [(parseFloat(point[0]) + parseFloat(100)), (parseFloat(point[1]) + parseFloat(100))]});
				console.dir(trianglePath);

				console.log('-filter() test ----------------');
				// FILTER check
				function isBigEnough(element, index, array) {
					var newElement = [];

					if (element[0] >= 400 || element[1] >= 400) {
						return true;
					}
					return false;
				}
				var filtered = trianglePath.filter(isBigEnough);

				console.dir(filtered);
				console.dir(trianglePath);

				
				console.log('-parsing tests---------------');

				var relativeElPathTest = 'l100 100 300 300 L100 100 z';
				var relElPath = Path.parse(relativeElPathTest);
				console.dir(relElPath);
				console.log(Path.isPathValid(42));

				var horizontalLineTest = 'm100 100H 200 100 400h300 400 100L500 600Z';
				var horizontalPathTest = Path.parse(horizontalLineTest);
				console.log(horizontalLineTest);
				console.dir(horizontalPathTest);

				var verticalLineTest = 'm100 100V 200 100 400v300 400 100L500 600Z';
				var verticalPathTest = Path.parse(verticalLineTest);
				console.log(verticalLineTest);
				console.dir(verticalPathTest);
				
			}(window || this));
		</script>